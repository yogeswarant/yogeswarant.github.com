<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Yogi's corner</title><link href="http://www.everyogi.in/" rel="alternate"></link><link href="http://www.everyogi.in/feeds/python.atom.xml" rel="self"></link><id>http://www.everyogi.in/</id><updated>2014-05-19T11:01:58+05:30</updated><entry><title>Generators in Python</title><link href="http://www.everyogi.in/python/generators_in_python/" rel="alternate"></link><published>2014-05-19T11:01:58+05:30</published><updated>2014-05-19T11:01:58+05:30</updated><author><name>Yogeswaran Thulasidoss</name></author><id>tag:www.everyogi.in,2014-05-19:python/generators_in_python/</id><summary type="html">&lt;p&gt;One of the few obscure feature of python (for the beginners) is &lt;strong&gt;Generators&lt;/strong&gt;.
In this post I would like to share few naive questions I had about generators
and the answers I got after understanding them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Question 1:&lt;/strong&gt; Are generators something like static variables in C?  Say, generateFibonacciNumber() is a generator.   First time I call generateFibonacciNumber() and iterate upto value 5, the next time I call  generateFibonacciNumber() will it start returning from value 8 when iterated?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This could sound like most dumb question on earth, but honestly I had this
question having come from C background.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  No. Generators should ...&lt;/p&gt;</summary><category term="python"></category><category term="generators"></category><category term="how it works"></category></entry></feed>