<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Yogi's corner</title><link href="http://www.everyogi.in/" rel="alternate"></link><link href="http://www.everyogi.in/feeds/misc.atom.xml" rel="self"></link><id>http://www.everyogi.in/</id><updated>2017-01-13T18:16:19+05:30</updated><entry><title>Blog story</title><link href="http://www.everyogi.in/misc/my_blog/" rel="alternate"></link><published>2017-01-13T18:16:19+05:30</published><updated>2017-01-13T18:16:19+05:30</updated><author><name>Yogeswaran Thulasidoss</name></author><id>tag:www.everyogi.in,2017-01-13:misc/my_blog/</id><summary type="html">&lt;p&gt;In this article, I wanted to share about various people and factors motivating me to start this blog and the tools I used to make it live.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://www.github.com/fizerkhan"&gt;Fizer&lt;/a&gt;&lt;/strong&gt;, who runs &lt;a href="http://www.chennainerd.in"&gt;www.chennainerd.in&lt;/a&gt; insisted me to start writing and was ready to publish my articles in it.  He emphasised on &lt;strong&gt;&lt;em&gt;creating a brand on the internet, which can in-a-way be achieved through blogging&lt;/em&gt;&lt;/strong&gt;.  He was patient enough to do the proof reading and educated me about &lt;a href="https://news.ycombinator.com"&gt;hacker news&lt;/a&gt; for taking it to larger audience.  It is only because of his influence this blog is live.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Software Engineer's Life Manual ...&lt;/strong&gt;&lt;/p&gt;</summary><category term="blogging"></category></entry><entry><title>Proxy and port forwarding</title><link href="http://www.everyogi.in/misc/proxy_port_forwarding/" rel="alternate"></link><published>2016-11-16T18:40:19+05:30</published><updated>2016-11-16T18:40:19+05:30</updated><author><name>Yogeswaran Thulasidoss</name></author><id>tag:www.everyogi.in,2016-11-16:misc/proxy_port_forwarding/</id><summary type="html">&lt;p&gt;This article is more like a case study on when to use proxies and when to just stick to simple port forwarder.  Also discusses in detail on what each of those is, and the tools falling under each category.&lt;/p&gt;
&lt;p&gt;At office, we have our solution - basically a bunch of HTTP services, deployed on openstack which is not directly accessible from external network.  We were asked to use a &lt;a href="https://en.wikipedia.org/wiki/Jump_server"&gt;jump server&lt;/a&gt; (a.k.a jump box/jump host) - a server in the middle which has access to both, private network of the solution and the external network.&lt;/p&gt;
&lt;p&gt;For using the services ...&lt;/p&gt;</summary><category term="haproxy"></category><category term="ssh"></category><category term="proxy"></category><category term="reverse-proxy"></category></entry><entry><title>Dockerfile CMD vs ENTRYPOINT</title><link href="http://www.everyogi.in/misc/dockerfile_cmd_entrypoint/" rel="alternate"></link><published>2016-10-20T17:54:07+05:30</published><updated>2016-10-20T17:54:07+05:30</updated><author><name>Yogeswaran Thulasidoss</name></author><id>tag:www.everyogi.in,2016-10-20:misc/dockerfile_cmd_entrypoint/</id><summary type="html">&lt;p&gt;I had difficulty in understanding the difference between CMD and ENTRYPOINT in Dockerfile before I did the below experiment.  Hope this will help someone like me who cannot understand the difference from the &lt;a href="https://docs.docker.com/engine/reference/builder/"&gt;documentation&lt;/a&gt; or &lt;a href="http://stackoverflow.com/questions/21553353/what-is-the-difference-between-cmd-and-entrypoint-in-a-dockerfile"&gt;stackoverflow&lt;/a&gt;.
&lt;br&gt;&lt;/br&gt;
Consider the below docker file
&lt;pre&gt;
[ythulasi@YTHULASI-M-C341 01.BusyboxWithCMD]$ cat Dockerfile
FROM busybox:latest
CMD ["cat", "/etc/passwd"]
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Let's build an image and call it &lt;strong&gt;busy_cmd_image&lt;/strong&gt;
&lt;pre&gt;
[ythulasi@YTHULASI-M-C341 01.BusyboxWithCMD]$ docker build -t busy_cmd_image .
Sending build context to Docker daemon 2.048 kB
Step 1 : FROM busybox:latest
 ---&amp;gt; 2b8fd9751c4c
Step 2 : CMD cat /etc/passwd
 ---&amp;gt; Using cache
 ---&amp;gt; e4df0d0c0d67
Successfully built e4df0d0c0d67
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;Now, we ...&lt;/p&gt;</summary><category term="docker"></category><category term="dockerfile"></category><category term="how it works"></category></entry><entry><title>Random Rationalized</title><link href="http://www.everyogi.in/misc/random_rationalized/" rel="alternate"></link><published>2015-05-21T10:26:07+05:30</published><updated>2015-05-21T10:26:07+05:30</updated><author><name>Yogeswaran Thulasidoss</name></author><id>tag:www.everyogi.in,2015-05-21:misc/random_rationalized/</id><summary type="html">&lt;p&gt;I had a requirement to have random numbers generated in a C application.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Random number %d  =  %ld&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I ran the code once and saw that random numbers were getting generated.&lt;/p&gt;
&lt;p&gt;But to my surprise when I ran the code second time, I saw the same numbers getting printed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What??? Does it mean random numbers are predictable? If so, why is it called random?
&lt;code&gt;Random&lt;/code&gt; and &lt;code&gt;Predictable&lt;/code&gt; words literally contradicting each other.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But I remember using random.random ...&lt;/p&gt;</summary><category term="random"></category><category term="how it works"></category></entry></feed>